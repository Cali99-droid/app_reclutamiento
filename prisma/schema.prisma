generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model aficion {
  id            Int        @id @default(autoincrement())
  actividad     String     @db.VarChar(150)
  nivel         String     @db.VarChar(100)
  logro         String     @db.VarChar(200)
  year          Int
  postulante_id Int
  postulante    postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_aficion_postulante1")

  @@index([postulante_id], map: "fk_aficion_postulante1_idx1")
}

model blacklist {
  id            Int        @id @default(autoincrement())
  fecha         DateTime   @db.Date
  dni           String     @db.Char(15)
  postulante_id Int
  create_time   DateTime?  @default(now()) @db.Timestamp(0)
  update_time   DateTime?  @db.Timestamp(0)
  postulante    postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_blacklist_postulante1")

  @@index([postulante_id], map: "fk_blacklist_postulante1_idx")
}

model capacitacion {
  id            Int        @id @default(autoincrement())
  titulo        String     @db.VarChar(200)
  horas         Int
  year          Int
  descripcion   String     @db.LongText
  institucion   String     @db.VarChar(200)
  postulante_id Int
  doc           String?    @db.VarChar(225)
  postulante    postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_capacitacion_postulante1")

  @@index([postulante_id], map: "fk_capacitacion_postulante1_idx1")
}

model cargo {
  id             Int        @id @default(autoincrement())
  institucion    String     @db.VarChar(150)
  referencia     String?    @db.Char(10)
  remuneracion   Float
  nivel          String     @db.VarChar(45)
  cantidad_cargo Int?       @default(0)
  year           Int
  descripcion    String?    @db.VarChar(100)
  contacto       String?    @db.VarChar(200)
  desde          DateTime?  @db.Date
  hasta          DateTime?  @db.Date
  postulante_id  Int
  doc            String?    @db.VarChar(225)
  postulante     postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cargo_postulante1")

  @@index([postulante_id], map: "fk_cargo_postulante1_idx1")
}

model categoria {
  id           Int            @id @default(autoincrement())
  nombre       String         @db.VarChar(80)
  convocatoria convocatoria[]
  test         test[]
}

model convocatoria {
  id                        Int                         @id @default(autoincrement())
  titulo                    String                      @db.VarChar(45)
  descripcion               String                      @db.LongText
  experiencia               Int
  gradoId                   Int                         @map("grado_id")
  estadoId                  Int                         @map("estado_id")
  sueldoOfertado            Float                       @map("sueldo_ofertado")
  vacantes                  Int
  vigencia                  DateTime?                   @db.Date
  categoria_id              Int?
  img                       String?                     @db.VarChar(225)
  slug                      String                      @db.VarChar(255)
  categoria                 categoria?                  @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_convocatoria_categoria1")
  estado                    estado                      @relation(fields: [estadoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_convocatoria_estado1")
  grado                     grado                       @relation(fields: [gradoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_convocatoria_grado1")
  convocatoria_x_jurado     convocatoria_x_jurado[]
  convocatoria_x_user       convocatoria_x_user[]
  postulante_x_convocatoria postulante_x_convocatoria[]
  puntajes                  puntajes[]

  @@index([categoria_id], map: "fk_convocatoria_categoria1_idx")
  @@index([estadoId], map: "fk_convocatoria_estado1_idx")
  @@index([gradoId], map: "fk_convocatoria_grado1_idx")
}

model convocatoria_x_jurado {
  id              Int          @id @default(autoincrement())
  fecha           DateTime     @default(now()) @db.Timestamp(0)
  convocatoria_id Int
  user_id         Int
  convocatoria    convocatoria @relation(fields: [convocatoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_convocatoria_x_jurado_convocatoria1")
  user            user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_convocatoria_x_jurado_user1")

  @@index([convocatoria_id], map: "fk_convocatoria_x_jurado_convocatoria1_idx")
  @@index([user_id], map: "fk_convocatoria_x_jurado_user1_idx")
}

model convocatoria_x_user {
  id              Int          @id @default(autoincrement())
  convocatoria_id Int
  user_id         Int
  convocatoria    convocatoria @relation(fields: [convocatoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_convocatoria_x_user_convocatoria1")
  user            user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_convocatoria_x_user_user1")

  @@index([convocatoria_id], map: "fk_convocatoria_x_user_convocatoria1_idx")
  @@index([user_id], map: "fk_convocatoria_x_user_user1_idx")
}

model estado {
  id           Int            @id @default(autoincrement())
  nombre       String         @db.VarChar(80)
  convocatoria convocatoria[]
}

model estado_postulante {
  id                        Int                         @id @default(autoincrement())
  nombre                    String                      @db.VarChar(45)
  postulante_x_convocatoria postulante_x_convocatoria[]
}

model estudios {
  id            Int        @id @default(autoincrement())
  profesion     String     @db.VarChar(150)
  institucion   String     @db.VarChar(200)
  grado         String     @db.VarChar(200)
  year          Int
  postulante_id Int
  doc           String?    @db.VarChar(225)
  postulante    postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_estudios_postulante1")

  @@index([postulante_id], map: "fk_estudios_postulante1_idx1")
}

model grado {
  id           Int            @id @default(autoincrement())
  nombre       String         @db.VarChar(100)
  convocatoria convocatoria[]
  postulante   postulante[]
}

model investigacion {
  id            Int        @id @default(autoincrement())
  titulo        String     @db.VarChar(200)
  institucion   String     @db.VarChar(150)
  year          Int
  postulante_id Int
  postulante    postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_investigacion_postulante1")

  @@index([postulante_id], map: "fk_investigacion_postulante1_idx1")
}

model item {
  id            Int             @id @default(autoincrement())
  descripcion   String          @db.LongText
  test_id       Int
  test          test            @relation(fields: [test_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_item_test1")
  puntaje_items puntaje_items[]

  @@index([test_id], map: "fk_item_test1_idx")
}

model persona {
  id           Int          @id @default(autoincrement())
  nombres      String       @db.VarChar(150)
  apellido_pat String       @db.VarChar(100)
  apellido_mat String       @db.VarChar(100)
  nacimiento   DateTime?    @db.Date
  postulante   postulante[]
  user         user[]
}

model postulante {
  id                        Int                         @id @default(autoincrement())
  telefono                  String?                     @db.VarChar(45)
  direccion                 String                      @db.VarChar(225)
  experiencia               Int?
  nacimiento                DateTime                    @map("fecha_nacimiento") @db.Date
  numeroDocumento           String?                     @unique(map: "numero_documento_UNIQUE") @map("numero_documento") @db.VarChar(45)
  sueldo                    Float
  estado_civil              String?                     @db.VarChar(45)
  exalumno                  Int?                        @db.TinyInt
  egreso                    Int?
  hijos                     Int?
  discapacidad              Int?                        @db.TinyInt
  image                     String?                     @db.LongText
  nivel                     String?                     @db.VarChar(60)
  doc                       String?                     @db.LongText
  persona_id                Int
  gradoId                   Int                         @map("grado_id")
  tipoId                    Int                         @map("tipo_documento_id")
  descartado                Int?                        @db.TinyInt
  aficion                   aficion[]
  blacklist                 blacklist[]
  capacitacion              capacitacion[]
  cargo                     cargo[]
  dni_image                 dni_image[]
  estudios                  estudios[]
  investigacion             investigacion[]
  grado                     grado                       @relation(fields: [gradoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_postulante_grado1")
  persona                   persona                     @relation(fields: [persona_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_postulante_persona1")
  tipo_documento            tipo_documento              @relation(fields: [tipoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_postulante_tipo_documento1")
  postulante_x_convocatoria postulante_x_convocatoria[]
  puntajes                  puntajes[]
  reconocimiento            reconocimiento[]
  tics                      tics[]

  @@index([gradoId], map: "fk_postulante_grado1_idx")
  @@index([persona_id], map: "fk_postulante_persona1_idx1")
  @@index([tipoId], map: "fk_postulante_tipo_documento1_idx")
}

model postulante_x_convocatoria {
  id                   Int               @id @default(autoincrement())
  comentario           String?           @db.LongText
  fecha_comentario     String?           @db.VarChar(60)
  convocatoria_id      Int
  estado_postulante_id Int
  postulante_id        Int
  session              String?           @db.VarChar(255)
  monto                Int?
  fecha_cambio         DateTime?         @db.DateTime(0)
  create_time          DateTime?         @default(now()) @db.Timestamp(0)
  update_time          DateTime?         @db.Timestamp(0)
  convocatoria         convocatoria      @relation(fields: [convocatoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_postulante_x_convocatoria_convocatoria1")
  estado_postulante    estado_postulante @relation(fields: [estado_postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_postulante_x_convocatoria_estado_postulante1")
  postulante           postulante        @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_postulante_x_convocatoria_postulante1")
  puntajes             puntajes[]

  @@index([convocatoria_id], map: "fk_postulante_x_convocatoria_convocatoria1_idx")
  @@index([estado_postulante_id], map: "fk_postulante_x_convocatoria_estado_postulante1_idx")
  @@index([postulante_id], map: "fk_postulante_x_convocatoria_postulante1_idx")
}

model puntaje_items {
  id           Int      @id @default(autoincrement())
  puntajes_id  Int
  item_id      Int
  puntaje_item Int?
  item         item     @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_puntaje_items_item1")
  puntajes     puntajes @relation(fields: [puntajes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_puntaje_items_puntajes1")

  @@index([item_id], map: "fk_puntaje_items_item1_idx")
  @@index([puntajes_id], map: "fk_puntaje_items_puntajes1_idx")
}

model puntajes {
  id                           Int                        @id @default(autoincrement())
  total                        Int
  test_id                      Int
  postulante_id                Int
  user_id                      Int
  convocatoria_id              Int
  maximo                       Int?
  comentario                   String?                    @db.VarChar(200)
  postulante_x_convocatoria_id Int?
  rol                          Int?
  puntaje_items                puntaje_items[]
  convocatoria                 convocatoria               @relation(fields: [convocatoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_puntajes_convocatoria1")
  postulante                   postulante                 @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_puntajes_postulante1")
  postulante_x_convocatoria    postulante_x_convocatoria? @relation(fields: [postulante_x_convocatoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_puntajes_postulante_x_convocatoria1")
  test                         test                       @relation(fields: [test_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_puntajes_test1")
  user                         user                       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_puntajes_user1")

  @@index([convocatoria_id], map: "fk_puntajes_convocatoria1_idx")
  @@index([postulante_id], map: "fk_puntajes_postulante1_idx")
  @@index([test_id], map: "fk_puntajes_test1_idx")
  @@index([user_id], map: "fk_puntajes_user1_idx")
  @@index([postulante_x_convocatoria_id], map: "fk_puntajes_postulante_x_convocatoria1_idx")
}

model reconocimiento {
  id            Int        @id @default(autoincrement())
  reconocimento String     @db.LongText
  institucion   String     @db.VarChar(45)
  descripcion   String     @db.VarChar(200)
  year          Int
  postulante_id Int
  doc           String?    @db.VarChar(255)
  postulante    postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reconocimiento_postulante1")

  @@index([postulante_id], map: "fk_reconocimiento_postulante1_idx1")
}

model rol {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  test test[]
  user user[]
}

model test {
  id           Int        @id @default(autoincrement())
  nombre       String     @db.VarChar(200)
  rol_id       Int?
  categoria_id Int?
  item         item[]
  puntajes     puntajes[]
  categoria    categoria? @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_test_categoria1")
  rol          rol?       @relation(fields: [rol_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_test_rol1")

  @@index([rol_id], map: "fk_test_rol1_idx")
  @@index([categoria_id], map: "fk_test_categoria1_idx")
}

model tics {
  id            Int        @id @default(autoincrement())
  tecnologia    String     @db.VarChar(45)
  nivel         String     @db.VarChar(45)
  postulante_id Int
  postulante    postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tics_postulante1")

  @@index([postulante_id], map: "fk_tics_postulante1_idx1")
}

model tipo_documento {
  id         Int          @id @default(autoincrement())
  nombre     String?      @db.VarChar(45)
  postulante postulante[]
}

model user {
  id                    Int                     @id @default(autoincrement())
  email                 String?                 @unique @db.VarChar(255)
  password              String                  @db.VarChar(255)
  create_time           DateTime                @default(now()) @db.Timestamp(0)
  token                 String?                 @db.VarChar(100)
  confirmado            Int?                    @default(0) @db.TinyInt
  img                   String?                 @db.LongText
  rol_id                Int
  persona_id            Int
  convocatoria_x_jurado convocatoria_x_jurado[]
  convocatoria_x_user   convocatoria_x_user[]
  puntajes              puntajes[]
  persona               persona                 @relation(fields: [persona_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_persona1")
  rol                   rol                     @relation(fields: [rol_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_rol")

  @@index([persona_id], map: "fk_user_persona1_idx")
  @@index([rol_id], map: "fk_user_rol_idx")
}

model dni_image {
  id            Int        @id @default(autoincrement())
  image         String     @db.VarChar(100)
  postulante_id Int
  postulante    postulante @relation(fields: [postulante_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dni_image_postulante1")

  @@index([postulante_id], map: "fk_dni_image_postulante1_idx")
}
